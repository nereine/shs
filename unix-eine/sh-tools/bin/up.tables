#!/usr/bin/env bash
# up is a simple cross-platform shell script for package/system upgrade
# up.tables is a files containing command tables for up

##	Synopsis
#	nameFunction() {
#		typeset -A nameTable
#		nameTable[OS_0]='action for OS_0';
#		nameTable[OS_1]='action for OS_1';
#
#		## Note that OS variable ($OS) is from dotfiles/general/.bash_profile
#		You can get .bash_profile from https://gitlab.com/artnoi-staple/unix
#		
#		cmddesc+='Description for action for selected OS'		
#		# Prompt user for confirmation, else exit right away
#		upprompt;
#		# Assign command to cmd variable based on OS
#		cmd+='${nameTable[$OS]}';
#	}

## The command in this table is used to 'update' the package database
upupdate() {
	typeset -A updateTable;
	updateTable[desc]='Check for new packages (or in some systems, update package database)';
	updateTable[Darwin]='brew update';
	updateTable[OpenBSD]='pkg_add -Uun';
	updateTable[Debian]='apt update';
	updateTable[Arch]='yay -Qu';
	# If 'yay' is not installed, 'use checkupdates'
	#updateTable[Arch]='checkupdates';
	updateTable[Void]='xbps-install -Suv';
	updateTable[Redhat]='dnf check-update';
	
	# Assign $cmd and its description
	cmddesc+="${updateTable[desc]}";
	cmd+="${updateTable[$OS]}";
}

## The commands in this table are used to 'list' outdated packages
uplist() {
	typeset -A uplistTable;
	uplistTable[desc]='List outdated packages';
	uplistTable[Darwin]='brew outdated';
	uplistTable[OpenBSD]='pkg_add -Uun';
	uplistTable[Debian]='apt list --upgradeable';
	uplistTable[Arch]='checkupdates';
	uplistTable[Void]='';
	uplistTable[Redhat]='dnf check-update';
	
	# Assign $cmd and its description
	cmddesc+="${uplistTable[desc]}";
	cmd+="${uplistTable[$OS]}";
}

## The commands in this table are used to upgrade the outdated packages
upupgrade() {
	typeset -A upgradeTable;
	upgradeTable[desc]='Upgrade packages';
	upgradeTable[Darwin]='brew upgrade';
	upgradeTable[OpenBSD]='pkg_add -Uu';
	upgradeTable[FreeBSD]='pkg update';
	upgradeTable[Debian]='apt upgrade';
	upgradeTable[Arch]='yay -Syu';
	# Using 'sudo up' with pacman instead of yay may fail (because 'sudo' will clear environment table) if sh-tools and dotfiles are not in root's $HOME. Prepend the literal string in the line below with 'sudo' so that it comes 'sudo pacman -Syu', if that is what you want to do with 'up g'/'up grade'
	#upgradeTable[Arch]='pacman -Syu';
	upgradeTable[Void]='xbps-install -Suv';
	upgradeTable[Redhat]='dnf update';
	
	# Assign $cmd and its description
	cmddesc+="${upgradeTable['desc']}";
	cmd+="${upgradeTable[$OS]}";
}

## The commands in this table are used to upgrade system software
upsys() {
	typeset -A upsysTable;
	upsysTable[desc]='Upgrade system software';
	upsysTable[Darwin]='softwareupdate -i -a';
	upsysTable[OpenBSD]='fw_update && syspatch';
	upsysTable[FreeBSD]='freebsd-update fetch install';
	upsysTable[Debian]='apt full-upgrade';
	upsysTable[Arch]='yay -Syu';
	upsysTable[Void]='';
	upsysTable[Redhat]='dnf upgrade --refresh';
	
	# Assign $cmd and its description
	cmddesc+="${upsysTable['desc']}";
	cmd+="${upsysTable[$OS]}";
}

## The commands in this table are used to clean old files from unwanted/outdated packages
upclean() {
	typeset -A cleanTable;
	cleanTable[desc]='Clean unwanted and outdated package cache and files';
	cleanTable[Darwin]='brew cleanup';
	cleanTable[OpenBSD]='pkg_delete -a';
	cleanTable[FreeBSD]='pkg autoremove ; pkg clean -a';
	cleanTable[Debian]='apt autoremove ; apt autoclean';
	cleanTable[Arch]='yay -Sc';
	cleanTable[Void]='xbps-remove -Oo';
	cleanTable[Redhat]='dnf autoremove ; dnf clean all';
	
	# Assign $cmd and its description
	cmddesc+="${cleanTable['desc']}";
	cmd+="${cleanTable[$OS]}";
}

## Special commands not included in the generic tables
upspecial() {
	# Unlike other *Table(s) above, ${specTable[]} uses does not have its own $cmddesc
	# Instead, $cmddesc is made by putting the actual command line into a pre-formatted string
	typeset -A specTable
	
	## Synopsis
	# $put_your_arbitary_logic_here
	# specTable[desc]='Your arbitary special command desciption'
	# specTable[$matching_argument]+='Your arbitary shell command(s)'
	## Example below shows testing $OS==Arch and then put 'yay -Syu' into the table with y as the index or argument
	
	# See https://gitlab.com/artnoi-staple/unix/sh-tools/bin/up-git
	specTable[git]='up-git';
	# Arch Linux yay
	specTable[aur]+='yay -Syu';
	specTable[y]+='yay -Syu';
	
	# Assign $cmd and its description
	cmddesc+="Special command: ${specTable[$1]}";
	cmd+="${specTable[$1]}";
}

## upafter() - Commands that will be run after $cmd
# Unlike most of the function in up.tables,
# upafter() is written as a simple shell function without arrays.
upafter() {
	# You can safely add your own command and logic here, as it is isolated from the rest of up.
	if	[[ '$OS' == 'Darwin' ]]; then
		simyn 'up: Check for Apple updates?'\
		&& softwareupdate -l\
		&& simyn 'up: Perform Apple system upgrade from this shell? (Not recommended)'\
		&& softwareupdate -i -a
	elif [[ '$OS' == 'Arch' ]]; then
		simyn 'Reload-restart systemd services?'\
		&&	systemctl daemon-reload\
		&&	systemctl reset-failed
	fi
}
